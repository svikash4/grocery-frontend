{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction RegisterComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.successMessage);\n  }\n}\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(fb, authService, router) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.successMessage = '';\n      this.errorMessage = '';\n      this.registerForm = this.fb.group({\n        name: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', Validators.required]\n      });\n    }\n    onSubmit() {\n      if (this.registerForm.valid) {\n        this.authService.register(this.registerForm.value).subscribe({\n          next: () => {\n            this.successMessage = 'Registered successfully!';\n            setTimeout(() => this.router.navigate(['/login']), 1500);\n          },\n          error: () => {\n            this.errorMessage = 'Failed to register. Try again.';\n          }\n        });\n      }\n    }\n    static {\n      this.ɵfac = function RegisterComponent_Factory(t) {\n        return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: RegisterComponent,\n        selectors: [[\"app-register\"]],\n        decls: 21,\n        vars: 4,\n        consts: [[1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"formControlName\", \"name\", \"type\", \"text\", 1, \"form-control\"], [\"formControlName\", \"email\", \"type\", \"email\", 1, \"form-control\"], [\"formControlName\", \"password\", \"type\", \"password\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-success\"]],\n        template: function RegisterComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n            i0.ɵɵtext(3, \"Register\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"form\", 2);\n            i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_4_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n            i0.ɵɵtext(7, \"Name:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(8, \"input\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\");\n            i0.ɵɵtext(11, \"Email:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(12, \"input\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\");\n            i0.ɵɵtext(15, \"Password:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(16, \"input\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(17, RegisterComponent_div_17_Template, 2, 1, \"div\", 7);\n            i0.ɵɵtemplate(18, RegisterComponent_div_18_Template, 2, 1, \"div\", 8);\n            i0.ɵɵelementStart(19, \"button\", 9);\n            i0.ɵɵtext(20, \"Register\");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n            i0.ɵɵadvance(13);\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n          }\n        },\n        dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n      });\n    }\n  }\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}