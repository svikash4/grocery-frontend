{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(fb, authService, router) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.successMessage = '';\n      this.errorMessage = '';\n      this.registerForm = this.fb.group({\n        name: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', Validators.required]\n      });\n    }\n    onSubmit() {\n      if (this.registerForm.valid) {\n        this.authService.register(this.registerForm.value).subscribe({\n          next: () => {\n            this.successMessage = 'Registered successfully!';\n            setTimeout(() => this.router.navigate(['/login']), 1500);\n          },\n          error: () => {\n            this.errorMessage = 'Failed to register. Try again.';\n          }\n        });\n      }\n    }\n    static {\n      this.ɵfac = function RegisterComponent_Factory(t) {\n        return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: RegisterComponent,\n        selectors: [[\"app-register\"]],\n        decls: 0,\n        vars: 0,\n        template: function RegisterComponent_Template(rf, ctx) {}\n      });\n    }\n  }\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}